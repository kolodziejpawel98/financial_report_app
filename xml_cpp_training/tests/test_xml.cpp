#include <gtest/gtest.h>
#include "../xml_training_lib.h"
#include "../external/tinyxml2-master/tinyxml2.h"

// TEST(OperationTest, getFirstOperation)
// {
//     std::unique_ptr<Operation> op;
//     op = getOperationObject("../example.xml");
//     ASSERT_NE(op, nullptr);

//     EXPECT_EQ(op->date.year, 2025);
//     EXPECT_EQ(op->date.month, 7);
//     EXPECT_EQ(op->date.day, 13);

//     EXPECT_EQ(op->category, "placeholder");
//     EXPECT_DOUBLE_EQ(op->amount, -41.00);
//     EXPECT_DOUBLE_EQ(op->totalBalanceAfterOperation, 2999.97);

//     EXPECT_EQ(op->description, "TRATTORIA RIALTO, KRAKOW");
// }

TEST(OperationTest, getAllOperations)
{
    std::vector<Operation> operations;
    const char *path = "../example.xml";
    operations = getAllOperations(path);

    for (auto &operation : operations)
    {
        operation.print();
    }
}

//
// TEST(OperationTest, ParseAllOperations) // test fully generated by chatGPT
// {
//     const char *path = "../example.xml";
//     std::vector<Operation> operations = getAllOperations(path);
//     ASSERT_EQ(operations.size(), 10);

//     struct ExpectedOperation
//     {
//         Date date;
//         std::string category;
//         std::string description;
//         double amount;
//         double totalBalanceAfterOperation;
//     };

//     ExpectedOperation expected[] = {
//         {Date(13, 7, 2025), "placeholder", "TRATTORIA RIALTO, KRAKOW", -41.00, 2999.97},
//         {Date(2, 7, 2025), "placeholder", "Wpłata gotówki w placówce banku, KRAKOW", +500.00, 3499.97},
//         {Date(1, 7, 2025), "placeholder", "Przelew na konto 987654321012345678, WARSZAWA", -150.00, 2849.97},
//         {Date(29, 6, 2025), "placeholder", "Zakup w sklepie XYZ, WROCLAW", -120.50, 2970.47},
//         {Date(28, 6, 2025), "placeholder", "Wpłata gotówki w placówce banku, GDANSK", +200.00, 3170.47},
//         {Date(27, 6, 2025), "placeholder", "Przelew od firmy ABC, POZNAN", +1000.00, 4170.47},
//         {Date(26, 6, 2025), "placeholder", "Zakup biletu autobusowego, LODZ", -15.00, 4155.47},
//         {Date(25, 6, 2025), "placeholder", "Przelew na konto 123456789012345678, KATOWICE", -500.00, 3655.47},
//         {Date(24, 6, 2025), "placeholder", "Wpłata gotówki w placówce banku, LUBLIN", +300.00, 3955.47},
//         {Date(23, 6, 2025), "placeholder", "Zakup w sklepie ABC, WARSZAWA", -60.00, 3895.47}};

//     for (size_t i = 0; i < operations.size(); ++i)
//     {
//         EXPECT_EQ(operations[i].date.day, expected[i].date.day);
//         EXPECT_EQ(operations[i].date.month, expected[i].date.month);
//         EXPECT_EQ(operations[i].date.year, expected[i].date.year);
//         EXPECT_EQ(operations[i].category, expected[i].category);
//         EXPECT_TRUE(operations[i].description.find(expected[i].description.substr(0, expected[i].description.find(','))) != std::string::npos);
//         EXPECT_DOUBLE_EQ(operations[i].amount, expected[i].amount);
//         EXPECT_DOUBLE_EQ(operations[i].totalBalanceAfterOperation, expected[i].totalBalanceAfterOperation);
//     }
// }
